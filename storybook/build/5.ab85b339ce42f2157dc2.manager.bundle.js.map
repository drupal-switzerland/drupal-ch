{"version":3,"sources":["webpack:///./node_modules/@storybook/components/dist/esm/ScrollArea/OverlayScrollbars.js","webpack:///./node_modules/overlayscrollbars/js/OverlayScrollbars.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","OverlayScrollbarsComponent","_ref","_ref$options","options","extensions","className","children","rest","osTargetRef","useRef","osInstance","useEffect","current","mergeHostClassNames","valid","destroy","createElement","ref","host","getElements","regex","RegExp","concat","replace","osClassNames","split","filter","name","match","join","displayName","global","window","document","undefined","_targets","_easingsMath","TYPES","LEXICON","c","s","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","result","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","fNOP","fBound","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","eventDoc","originalEvent","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","toString","MATH","Math","JQUERY","jQuery","EASING","PI","cos","sin","w","pow","t","sqrt","n","asin","a","abs","o","swing","b","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","stripAndCollapse","value","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","elementIsVisible","getClientRects","elms","base","elements","innerHTML","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","classList","classNamePrepared","contains","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","clearQ","jump","jumpToEnd","INSTANCES","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","possibleTemplateTypes","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","optionsDefaultsAndTemplate","convert","_pluginsExtensions","_pluginsOptions","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","_defaults","template","recursive","valType","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","valOne","valTwo","absValOne","absValTwo","isZoom","oldScrollbarSize","update","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strTransitionEndEvent","_classNameHostElement","_cassNamesPrefix","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportElement","_classNameViewportNativeScrollbarsOverlaid","_classNameTextInherit","_classNameScrollbarTrackOff","_classNameScrollbarTrack","_classNameScrollbarHandleOff","_classNameScrollbarHandle","_classNameScrollbarUnusable","_classNameScrollbar","_classNameScrollbarAutoHidden","_classNameScrollbarCornerResize","_classNameScrollbarCorner","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_swallowedUpdateHints","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","curr","cache","changedAttrs","checks","_elem","_attrs","check","checkCache","updateViewportAttrsFromTarget","updateAutoContentSizeChanged","float","bodyMinSizeC","changed","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","h","bodyMinSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","isRTLisX","normalizeShortcuts","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","elementName","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","targetElement","initBodyScroll","bodyMouseTouchDownListener","defaultView","parentWindow","findFirst","_strDot","setupResponsiveEventListener","setupStructureEvents","setupScrollbarEvents","setupScrollbarCornerEvents","reconnectMutationObserver","insideIFrame","mouseDownPosition","mouseDownSize","mouseDownInvertedScale","documentDragMove","onMouseTouchDownContinue","pageOffset","getCoordinates","hostElementCSS","documentMouseTouchUp","eventIsTrusted","documentOnSelectStart","releaseCapture","connectMutationObservers","isTouchEvent","screenX","screenY","addDestroyEventListener","getHostElementInvertedScale","setCapture","createMutationObservers","hostOnResized","activeElement","focus","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","capture","_capture","nativeParam","onElementResizedCallback","resizeObserver","strAnimationStartEvent","generateDiv","observe","dir","_classNameResizeObserverItemElement","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","onload","wnd","contentDocument","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","mutation","attributeName","mutationType","hostClassNamesChanged","oldValue","textareaUpdate","doUpdateForce","mutatedAttrs","createHostClassNameRegExp","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSize","_strMinMinus","f","oldClassNames","newClassNames","currClasses","diff","getArrayDifferences","a1","a2","k","idx","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","_strMaxMinus","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","_strPaddingMinus","_strMarginMinus","strOverflow","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","widestRow","textareaLastCol","cursorRow","cursorCol","_cursorRow","_cursorColumn","_rows","_columns","_widestRow","_cursorPosition","_cursorMax","textareaRowsChanged","lastRow","lastCol","cursorIsLastPosition","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","selectOrGenerateDivByClass","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","updateTextarea","doClearInterval","clearInterval","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","strFocus","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","contentOnTransitionEnd","isSizeAffectingCSSProperty","propertyName","affectingPropsX","affectingPropsXContentBox","_strBorderMinus","affectingPropsY","affectingPropsYContentBox","checkX","sizeIsAffected","checkPropertyName","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","trackTimeout","mouseDownScroll","mouseDownOffset","scrollbarVarsInfo","_info","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","scrollDelta","isFinite","clientX","clientY","onHandleMouseTouchDownAction","onHandleMouseTouchDown","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","isRTLisHorizontal","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","strTranslateBrace","getCSSTransitionString","transitionStr","assembledValue","strResult","valueArray","regExpMain","regExpValidate","properties","splitCssStyleByComma","$1","isTrack","element2","_l_t","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","nodeName","toFloat","num","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","doAdd","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","extensionName","extNameTypeString","fn","overlayScrollbars","factory"],"mappings":"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","file":"5.ab85b339ce42f2157dc2.manager.bundle.js","sourcesContent":["import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\nexport var OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      extensions = _ref.extensions,\n      className = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = React.useRef();\n  var osInstance = React.useRef();\n  React.useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-padding\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\nOverlayScrollbarsComponent.displayName = \"OverlayScrollbarsComponent\";\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport default OverlayScrollbarsComponent;","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));"],"sourceRoot":""}